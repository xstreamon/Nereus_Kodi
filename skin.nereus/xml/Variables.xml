<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<variable name="PVRStatusImageVar">
		<value condition="ListItem.IsRecording">windows/pvr/record.png</value>
		<value condition="ListItem.HasTimer | ListItem.HasTimerSchedule">windows/pvr/timer.png</value>
	</variable>
	<variable name="AutoCompletionContentVar">
		<value condition="System.HasAddon(plugin.program.autocompletion) + !System.HasHiddenInput">plugin://plugin.program.autocompletion?info=autocomplete&amp;&amp;id=$INFO[Control.GetLabel(312).index(1)]&amp;&amp;limit=9</value>
	</variable>
	<variable name="PlaylistLabelVar">
		<value condition="String.IsEqual(ListItem.DbType,episode)">$INFO[ListItem.TVShowtitle,,: ]$INFO[ListItem.Season,,x]$INFO[ListItem.Episode,,. ]$INFO[ListItem.Title]</value>
		<value condition="String.IsEqual(ListItem.DbType,musicvideo)">$INFO[ListItem.Artist,, - ]$INFO[ListItem.Title]</value>
		<value>$INFO[ListItem.Label]</value>
	</variable>
	<variable name="PlaylistLabel2Var">
		<value condition="Window.IsActive(musicplaylist)">$INFO[ListItem.Duration]</value>
		<value>$INFO[ListItem.Duration,, $LOCALIZE[12391]]</value>
	</variable>
	<variable name="InfoListPathVar">
		<value condition="String.IsEmpty(Container.PluginName)">$INFO[ListItem.FolderPath]</value>
		<value></value>
	</variable>
	<variable name="AddonCountLabel">
		<value condition="Integer.IsGreater(Container(8000).NumItems,10)">&gt;9</value>
		<value condition="Integer.IsGreater(Container(8000).NumItems,9)">9</value>
		<value condition="Integer.IsGreater(Container(8000).NumItems,8)">8</value>
		<value condition="Integer.IsGreater(Container(8000).NumItems,7)">7</value>
		<value condition="Integer.IsGreater(Container(8000).NumItems,6)">6</value>
		<value condition="Integer.IsGreater(Container(8000).NumItems,5)">5</value>
		<value condition="Integer.IsGreater(Container(8000).NumItems,4)">4</value>
		<value condition="Integer.IsGreater(Container(8000).NumItems,3)">3</value>
		<value condition="Integer.IsGreater(Container(8000).NumItems,2)">2</value>
		<value condition="Integer.IsGreater(Container(8000).NumItems,0)">1</value>
		<value>[COLOR grey]0[/COLOR]</value>
	</variable>
	<variable name="MusicInfoTextboxVar">
		<value condition="String.IsEqual(ListItem.DbType,song)">$INFO[ListItem.Comment,[B]$LOCALIZE[569][/B][CR][COLOR=white],[/COLOR]]</value>
		<value condition="String.IsEqual(ListItem.DbType,album)">$INFO[ListItem.Property(Album_Description),[COLOR=white],[/COLOR]]</value>
		<value condition="String.IsEqual(ListItem.DbType,artist)">$INFO[ListItem.Property(Artist_Description),[COLOR=white],[/COLOR]]</value>
	</variable>
	<variable name="NowPlayingSublabelVar">
		<value condition="VideoPlayer.Content(episodes)">$INFO[VideoPlayer.TvShowTitle]</value>
		<value condition="VideoPlayer.Content(movies)">$INFO[VideoPlayer.Year]$INFO[VideoPlayer.Genre, - ]</value>
		<value condition="VideoPlayer.Content(livetv)">$INFO[VideoPlayer.ChannelName]</value>
		<value condition="Player.HasAudio">$INFO[MusicPlayer.Artist]</value>
	</variable>
	<variable name="NowPlayingIconVar">
		<value condition="Player.Paused">icons/now-playing/pause.png</value>
		<value>icons/now-playing/play.png</value>
	</variable>
	<variable name="NowPlayingPosterVar">
		<value condition="!String.IsEmpty(Player.Art(poster))">$INFO[Player.Art(poster)]</value>
		<value condition="!String.IsEmpty(Player.Art(tvshow.poster))">$INFO[Player.Art(tvshow.poster)]</value>
		<value condition="String.IsEmpty(Player.Icon) + VideoPlayer.Content(livetv)">DefaultTVShows.png</value>
		<value>$INFO[Player.Icon]</value>
	</variable>
	<variable name="ShiftThumbVar">
		<value condition="!String.IsEmpty(Listitem.Art(poster))">$INFO[Listitem.Art(poster)]</value>
		<value condition="ListItem.IsParentFolder">DefaultFolderBackSquare.png</value>
		<value condition="String.IsEmpty(Listitem.Thumb) + [String.IsEqual(listitem.dbtype,album) | String.IsEqual(listitem.dbtype,artist)]">DefaultAudio.png</value>
		<value condition="ListItem.IsFolder + String.IsEmpty(ListItem.Thumb)">DefaultFolderSquare.png</value>
		<value>$INFO[ListItem.Thumb]</value>
	</variable>
	<variable name="MusicInfoThumbVar">
		<value condition="!String.IsEmpty(Listitem.Art(thumb))">$INFO[Listitem.Art(thumb)]</value>
		<value condition="String.IsEqual(listitem.dbtype,artist)">DefaultArtist.png</value>
		<value condition="String.IsEqual(listitem.dbtype,album)">DefaultAlbumCover.png</value>
		<value>DefaultAudio.png</value>
	</variable>
	<variable name="InfoWallThumbVar">
		<value condition="!String.IsEqual(listitem.dbtype,musicvideo) + !String.IsEmpty(Listitem.Art(poster))">$INFO[Listitem.Art(poster)]</value>
		<value>$INFO[ListItem.Icon]</value>
	</variable>
	<variable name="IconWallThumbVar">
		<value condition="String.IsEqual(listitem.dbtype,genre) + System.HasAddon(resource.images.moviegenreicons.transparent)">$INFO[ListItem.Label,resource://resource.images.moviegenreicons.transparent/,.png]</value>
		<value condition="String.IsEqual(listitem.dbtype,studio) + System.HasAddon(resource.images.studios.white)">$INFO[ListItem.Label,resource://resource.images.studios.white/,.png]</value>
		<value condition="!String.IsEmpty(Listitem.Art(poster))">$INFO[Listitem.Art(poster)]</value>
		<value condition="!String.isempty(ListItem.Thumb)">$INFO[ListItem.Thumb]</value>
		<value>$INFO[ListItem.Icon]</value>
	</variable>
	<variable name="ListLabel2Var">
		<value condition="String.IsEmpty(Container.PluginName) + Container.Content(tvshows) + String.IsEqual(Container.SortMethod,$LOCALIZE[556])">$INFO[ListItem.Property(WatchedEpisodes)]$INFO[ListItem.Property(TotalEpisodes), / ,]</value>
		<value condition="String.IsEqual(Container.SortMethod,$LOCALIZE[556])">$INFO[ListItem.Year]</value>
		<value condition="!String.isempty(ListItem.Appearances)">$LOCALIZE[38026]: $INFO[ListItem.Appearances]</value>
		<value>$INFO[ListItem.Label2]</value>
	</variable>
	<variable name="ShiftLeftTextBoxVar">
		<value condition="Window.IsActive(pictures)">$INFO[ListItem.Property(description),,[CR]]$INFO[ListItem.PictureDatetime,[COLOR button_focus]$LOCALIZE[552]:  [/COLOR],[CR]]$INFO[ListItem.PictureResolution,[COLOR button_focus]$LOCALIZE[169]:  [/COLOR],[CR]]$INFO[ListItem.PictureCamMake,[COLOR button_focus]$LOCALIZE[31041]:  [/COLOR],[CR]]$INFO[ListItem.PictureCamModel,[COLOR button_focus]$LOCALIZE[21823]:  [/COLOR],[CR]]</value>
		<value condition="String.IsEqual(listitem.dbtype,artist)">$INFO[ListItem.Genre,[COLOR button_focus]$LOCALIZE[515]:  [/COLOR],[CR]]$INFO[ListItem.Property(Artist_YearsActive),[COLOR button_focus]$LOCALIZE[21898]:  [/COLOR],[CR]]$INFO[ListItem.Property(Artist_Style),[COLOR button_focus]$LOCALIZE[736]:  [/COLOR],[CR]]</value>
		<value condition="String.IsEqual(listitem.dbtype,album)">$INFO[ListItem.Year,[COLOR button_focus]$LOCALIZE[345]:  [/COLOR],[CR]]$INFO[ListItem.Genre,[COLOR button_focus]$LOCALIZE[515]:  [/COLOR],[CR]]$INFO[ListItem.Property(album_label),[COLOR button_focus]$LOCALIZE[21899]:  [/COLOR],[CR]]$INFO[ListItem.Property(album_style),[COLOR button_focus]$LOCALIZE[736]:  [/COLOR],[CR]]</value>
		<value condition="String.IsEqual(Listitem.DBType,season) | String.IsEqual(Listitem.DBType,tvshow)">$INFO[ListItem.Genre,[COLOR button_focus]$LOCALIZE[515]:  [/COLOR],[CR]]$INFO[ListItem.Premiered,[COLOR button_focus]$LOCALIZE[20416]:  [/COLOR]]</value>
		<value>$INFO[ListItem.Genre,[COLOR button_focus]$LOCALIZE[515]:  [/COLOR],[CR]]$INFO[ListItem.Director,[COLOR button_focus]$LOCALIZE[20339]:  [/COLOR],[CR]]$INFO[ListItem.Writer,[COLOR button_focus]$LOCALIZE[20417]:  [/COLOR],[CR]]$INFO[ListItem.Premiered,[COLOR button_focus]$LOCALIZE[20416]:  [/COLOR]]</value>
	</variable>
	<variable name="ShiftRightTextBoxVar">
		<value condition="Window.IsActive(pictures)">$INFO[ListItem.Size,[COLOR button_focus]$LOCALIZE[289]:  [/COLOR],[CR]]$INFO[ListItem.PictureAperture,[COLOR button_focus]$LOCALIZE[21826]:  [/COLOR],[CR]]$INFO[ListItem.PictureFocalLen,[COLOR button_focus]$LOCALIZE[21827]:  [/COLOR],[CR]]$INFO[ListItem.PictureExpTime,[COLOR button_focus]$LOCALIZE[21830]:  [/COLOR],[CR]]$INFO[ListItem.Date,[COLOR button_focus]$LOCALIZE[552]:  [/COLOR],[CR]]</value>
		<value condition="String.IsEqual(listitem.dbtype,artist)">$INFO[ListItem.Property(artist_description)]</value>
		<value condition="String.IsEqual(listitem.dbtype,album)">$INFO[ListItem.Property(album_description)]</value>
		<value>$INFO[ListItem.Plot]</value>
	</variable>
	<variable name="SelectLabel">
		<value condition="Control.IsVisible(3)">[COLOR=button_focus]$INFO[Container(3).NumItems][/COLOR] $LOCALIZE[31036] - [COLOR=button_focus]$INFO[Container(3).CurrentPage]/$INFO[Container(3).NumPages][/COLOR]</value>
		<value>[COLOR=button_focus]$INFO[Container(6).NumItems][/COLOR] $LOCALIZE[31036] - [COLOR=button_focus]$INFO[Container(6).CurrentPage]/$INFO[Container(6).NumPages][/COLOR]</value>
	</variable>
	<variable name="FileBrowserSelectLabel">
		<value condition="Control.IsVisible(450)">[COLOR=button_focus]$INFO[Container(450).NumItems][/COLOR] $LOCALIZE[31036] - [COLOR=button_focus]$INFO[Container(450).CurrentPage]/$INFO[Container(450).NumPages][/COLOR]</value>
		<value>[COLOR=button_focus]$INFO[Container(451).NumItems][/COLOR] $LOCALIZE[31036] - [COLOR=button_focus]$INFO[Container(451).CurrentPage]/$INFO[Container(451).NumPages][/COLOR]</value>
	</variable>
	<variable name="BannerArtVar">
		<value condition="ListItem.IsParentFolder">DefaultBackBanner.png</value>
		<value condition="!String.IsEmpty(ListItem.Art(banner))">$INFO[ListItem.Art(banner)]</value>
		<value condition="!String.isempty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
		<value>dialogs/dialog-bg-nobo.png</value>
	</variable>
	<variable name="FanartImageVar">
		<value condition="ListItem.IsParentFolder">special://skin/extras/home-images/movie.jpg</value>
		<value>$INFO[ListItem.Art(fanart)]</value>
	</variable>
	<variable name="ListBoxInfoVar">
		<value condition="String.IsEqual(Container.FolderPath,addons://outdated/) + !String.IsEmpty(ListItem.Addonnews)">$INFO[ListItem.Addonnews]</value>
		<value condition="Container.Content(addons)">$INFO[ListItem.AddonDescription]</value>
		<value condition="String.IsEqual(listitem.dbtype,album)">$INFO[ListItem.Property(album_description)]</value>
		<value condition="String.IsEqual(listitem.dbtype,musicvideo) | String.IsEqual(listitem.dbtype,video)">$INFO[ListItem.Genre,[COLOR button_focus]$LOCALIZE[515]: [/COLOR],[CR]]$INFO[ListItem.Plot]</value>
		<value condition="String.IsEqual(listitem.dbtype,artist)">$INFO[ListItem.Property(artist_description)]</value>
		<value condition="!String.IsEmpty(ListItem.Plot)">$INFO[ListItem.Plot]</value>
		<value condition="String.IsEqual(listitem.dbtype,song)">$VAR[MusicTrackInfo,[COLOR button_focus]$LOCALIZE[554]:[/COLOR],[CR]]$INFO[ListItem.Artist,[COLOR button_focus]$LOCALIZE[557]: [/COLOR],[CR]]$INFO[listitem.Album,[COLOR button_focus]$LOCALIZE[558]: [/COLOR],[CR]]$INFO[ListItem.DiscNumber,[COLOR button_focus]$LOCALIZE[427]: [/COLOR],[CR]]$INFO[ListItem.Year,[COLOR button_focus]$LOCALIZE[345]: [/COLOR],[CR]]$INFO[ListItem.Genre,[COLOR button_focus]$LOCALIZE[515]: [/COLOR],[CR]]$INFO[ListItem.Duration,[COLOR button_focus]$LOCALIZE[180]: [/COLOR],[CR]]$INFO[ListItem.Playcount,[COLOR button_focus]$LOCALIZE[567]: [/COLOR],[CR]]</value>
		<value>$INFO[ListItem.Genre,[COLOR button_focus]$LOCALIZE[515]: [/COLOR],[CR]]</value>
	</variable>
	<variable name="MusicTrackInfo">
		<value condition="String.IsEmpty(listitem.Title)">$INFO[listitem.TrackNumber, ]</value>
		<value>$INFO[listitem.TrackNumber, ,.]$INFO[listitem.Title, ]</value>
	</variable>	
	<variable name="WidgetGenreIconVar">
		<value condition="System.HasAddon(resource.images.moviegenreicons.transparent)">$INFO[ListItem.Label,resource://resource.images.moviegenreicons.transparent/,.png]</value>
		<value>DefaultGenre.png</value>
	</variable>
	<variable name="WidgetStudioIconVar">
		<value condition="System.HasAddon(resource.images.studios.white)">$INFO[ListItem.Label,resource://resource.images.studios.white/,.png]</value>
		<value>DefaultStudios.png</value>
	</variable>
	<variable name="AddonsLabel2Var">
		<value condition="ListItem.Property(addon.downloading)">$INFO[ListItem.Property(addon.status)]</value>
		<value condition="!String.IsEqual(Container.SortMethod,$LOCALIZE[551])">$INFO[ListItem.Label2]</value>
		<value>$INFO[ListItem.AddonCreator,, - ]$INFO[ListItem.AddonVersion]</value>
	</variable>
	<variable name="RatingSettingLabel2Var">
		<value condition="Skin.HasSetting(circle_rating)">$LOCALIZE[563]</value>
		<value condition="Skin.HasSetting(circle_userrating)">$LOCALIZE[38018]</value>
		<value>$LOCALIZE[16018]</value>
	</variable>
	<variable name="ProfileIdentificationLabel2Var">
		<value condition="Skin.HasSetting(show_profilename)">$LOCALIZE[31165]</value>
		<value condition="Skin.HasSetting(show_profileavatar)">$LOCALIZE[31166]</value>
		<value>$LOCALIZE[16018]</value>
	</variable>
	<variable name="AddonsListIconVar">
		<value condition="!String.IsEmpty(ListItem.AddonBroken)">icons/addonstatus/disable.png</value>
		<value condition="ListItem.Property(addon.orphaned)">icons/addonstatus/orphan.png</value>
		<value condition="ListItem.Property(addon.downloading)">icons/addonstatus/install.png</value>
		<value condition="ListItem.Property(addon.isinstalled) + !ListItem.Property(addon.isenabled) + Window.IsActive(addonbrowser)">icons/addonstatus/disable.png</value>
		<value condition="ListItem.Property(addon.hasupdate)">icons/addonstatus/update.png</value>
		<value condition="ListItem.Property(addon.isinstalled)">OverlayWatched.png</value>
		<value condition="!ListItem.IsParentFolder">OverlayUnwatched.png</value>
	</variable>
	<variable name="ResolutionFlagVar">
		<value condition="ListItem.IsStereoscopic">flags/videoresolution/3D.png</value>
		<value>$INFO[ListItem.VideoResolution,flags/videoresolution/,.png]</value>
	</variable>
	<variable name="ContainerResolutionFlagVar">
		<value condition="Container.ListItem.IsStereoscopic">flags/videoresolution/3D.png</value>
		<value>$INFO[Container.ListItem.VideoResolution,flags/videoresolution/,.png]</value>
	</variable>
	<variable name="BannerVar">
		<value condition="!String.IsEmpty(ListItem.Art(banner))">$INFO[ListItem.Art(banner)]</value>
		<value>$INFO[ListItem.Art(tvshow.banner)]</value>
	</variable>
	<variable name="PosterVar">
		<value condition="ListItem.IsParentFolder">DefaultFolderBackPoster.png</value>
		<value condition="!String.IsEmpty(Container.Art(season.poster)) + Container.Content(episodes)">$INFO[Container.Art(season.poster)]</value>
		<value condition="!String.IsEmpty(Container.Art(tvshow.poster)) + Container.Content(episodes)">$INFO[Container.Art(tvshow.poster)]</value>
		<value condition="!String.IsEmpty(Container.Art(tvshow.poster)) + Container.Content(seasons) + Window.IsActive(movieinformation)">$INFO[Container.Art(tvshow.poster)]</value>
		<value condition="Container.Content(actors) | Container.Content(directors)">$INFO[Container.ListItem.Art(thumb)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(tvshow.poster)) + !String.IsEqual(listitem.dbtype,season)">$INFO[ListItem.Art(tvshow.poster)]</value>
		<value>$INFO[ListItem.Art(poster)]</value>
	</variable>
	<variable name="InfoDialogPosterVar">
		<value condition="!String.IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(season.poster))">$INFO[ListItem.Art(season.poster)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(tvshow.poster))">$INFO[ListItem.Art(tvshow.poster)]</value>
	</variable>
	<variable name="BannerLabel2Var">
		<value condition="String.IsEqual(Listitem.DBType,tvshow)">$INFO[ListItem.Property(WatchedEpisodes)]$INFO[ListItem.Property(TotalEpisodes), / ,]</value>
		<!-- <value>$INFO[ListItem.Year]</value>
		 -->
	</variable>
	<variable name="VideoPlayerForwardRewindVar">
		<value condition="Player.Forwarding2x | Player.Rewinding2x">2x</value>
		<value condition="Player.Forwarding4x | Player.Rewinding4x">4x</value>
		<value condition="Player.Forwarding8x | Player.Rewinding8x">8x</value>
		<value condition="Player.Forwarding16x | Player.Rewinding16x">16x</value>
		<value condition="Player.Forwarding32x | Player.Rewinding32x">32x</value>
	</variable>
	<variable name="SeekLabel">
		<value condition="!String.IsEmpty(Player.SeekStepSize)">$LOCALIZE[773][COLOR=grey] $INFO[Player.SeekStepSize][/COLOR]</value>
		<value condition="Player.Paused">$LOCALIZE[112]</value>
		<value condition="Player.Forwarding">$LOCALIZE[31039] $VAR[VideoPlayerForwardRewindVar]</value>
		<value condition="Player.Rewinding">$LOCALIZE[31038] $VAR[VideoPlayerForwardRewindVar]</value>
		<value condition="Player.IsTempo">$LOCALIZE[31142]: $INFO[Player.PlaySpeed]</value>
	</variable>
	<variable name="SeekTimeLabelVar">
		<value condition="!String.IsEmpty(Player.SeekNumeric)">[B]$INFO[Player.SeekNumeric(hh:mm:ss)][/B]</value>
		<value condition="Player.Seeking + VideoPlayer.HasEPG">$INFO[PVR.EpgEventSeekTime]$INFO[PVR.EpgEventDuration, / ]</value>
		<value condition="Player.Seeking">$INFO[Player.SeekTime]$INFO[Player.Duration, / ]</value>
		<value condition="VideoPlayer.HasEpg">$INFO[PVR.EpgEventElapsedTime]$INFO[PVR.EpgEventDuration, / ]</value>
		<value>$INFO[Player.Time]$INFO[Player.Duration, / ]</value>
	</variable>
	<variable name="VideoOSDHelpTextVar">
		<value condition="Control.HasFocus(87) + [Player.Rewinding | Player.Forwarding]">$LOCALIZE[31050]</value>
		<value condition="Control.HasFocus(700)">$LOCALIZE[298]</value>
		<value condition="Control.HasFocus(703)">$LOCALIZE[31106]</value>
		<value condition="Control.HasFocus(704)">$LOCALIZE[24012]</value>
		<value condition="Control.HasFocus(804)">$LOCALIZE[31092]</value>
		<value condition="Control.HasFocus(70040)">$LOCALIZE[19033]</value>
		<value condition="Control.HasFocus(70041)">$LOCALIZE[19019]</value>
		<value condition="Control.HasFocus(70042)">$LOCALIZE[19069]</value>
		<value condition="Control.HasFocus(70043)">$LOCALIZE[5]</value>
		<value condition="Control.HasFocus(255)">$LOCALIZE[36501]</value>
		<value condition="Control.HasFocus(606)+ PVR.IsRecordingPlayingChannel">$LOCALIZE[19059]</value>
		<value condition="Control.HasFocus(606)">$LOCALIZE[264]</value>
		<value condition="ControlGroup(6000).HasFocus + Player.SeekEnabled">$LOCALIZE[31054]</value>
		<value condition="ControlGroup(6001).HasFocus + Player.SeekEnabled">$LOCALIZE[31054]</value>
	</variable>
	<variable name="MusicOSDHelpTextVar">
		<value condition="Control.HasFocus(620)">$LOCALIZE[31033]$INFO[MusicPlayer.UserRating, : ]</value>
		<value condition="Control.HasFocus(62040)">$LOCALIZE[19033]</value>
		<value condition="Control.HasFocus(62041)">$LOCALIZE[19019]</value>
		<value condition="Control.HasFocus(62042)">$LOCALIZE[19069]</value>
		<value condition="Control.HasFocus(62043)">$LOCALIZE[29900]</value>
		<value condition="Control.HasFocus(704)">$LOCALIZE[486]$INFO[Playlist.Repeat, : ]</value>
		<value condition="Control.HasFocus(607) + Playlist.IsRandom">$LOCALIZE[590]: $LOCALIZE[16041]</value>
		<value condition="Control.HasFocus(607)">$LOCALIZE[590]: $LOCALIZE[16039]</value>
		<value condition="Control.HasFocus(703)">$LOCALIZE[24013]</value>
		<value condition="Control.HasFocus(5000)">$LOCALIZE[10004]</value>
	</variable>
	<variable name="SkinSettingsHelpTextVar">
		<value condition="Container(9000).HasFocus(1)">$LOCALIZE[31129]</value>
		<value condition="Container(9000).HasFocus(2)">$LOCALIZE[31130]</value>
	</variable>
	<variable name="VolumeIconVar">
		<value condition="Player.Muted">dialogs/volume/mute.png</value>
		<value condition="Integer.IsGreater(Player.Volume,66)">dialogs/volume/volume.png</value>
		<value condition="Integer.IsGreater(Player.Volume,33)">dialogs/volume/volume2.png</value>
		<value condition="player.passthrough">dialogs/volume/volume.png</value>
		<value>dialogs/volume/volume1.png</value>
	</variable>
	<variable name="ListSubLabelVar">
		<value condition="ListItem.IsCollection"></value>
		<value>[COLOR grey]$INFO[ListItem.Year, (,)][/COLOR]</value>
	</variable>
	<variable name="VideoInfoMainLabelVar">
		<value condition="!String.IsEmpty(ListItem.TVShowTitle)">$INFO[ListItem.TVShowTitle]$INFO[ListItem.Year, ([COLOR grey],[/COLOR])]</value>
		<value condition="!String.IsEmpty(ListItem.Title)">$INFO[ListItem.Title]$INFO[ListItem.Year, ([COLOR grey],[/COLOR])]</value>
		<value>$INFO[ListItem.Label]$INFO[ListItem.Year, ([COLOR grey],[/COLOR])]</value>
	</variable>
	<variable name="VideoInfoPlayButtonLabelVar">
		<value condition="String.IsEqual(ListItem.DBType,tvshow) | String.IsEqual(ListItem.DBType,season)">$LOCALIZE[1024]</value>
		<value>$LOCALIZE[208]</value>
	</variable>
	<variable name="VideoInfoSubLabelVar">
		<value condition="String.IsEqual(ListItem.DBType,episode)">$INFO[ListItem.Season]$INFO[ListItem.Episode,[COLOR grey]x[/COLOR],: ]$INFO[ListItem.Title]</value>
		<value condition="String.IsEqual(ListItem.DBType,movie)">$INFO[ListItem.Tagline,[I],[/I]]</value>
		<value>$INFO[ListItem.Genre]</value>
	</variable>
	<variable name="VideoInfoBottomLabelVar">
		<value condition="Control.HasFocus(8)">$INFO[ListItem.LastPlayed,$LOCALIZE[568]: ]</value>
		<value condition="Control.HasFocus(6)">$INFO[ListItem.FileNameAndPath]</value>
	</variable>
	<variable name="PictureInfoMainLabelVar">
		<value condition="Window.IsActive(Slideshow)">$INFO[SlideShow.Filename]</value>
		<value>$INFO[ListItem.Label]</value>
	</variable>
	<variable name="PictureInfoSubLabelVar">
		<value condition="Window.IsActive(Slideshow)">$INFO[SlideShow.EXIFtime]</value>
		<value>$INFO[ListItem.PictureDateTime]</value>
	</variable>
	<variable name="NowPlayingBreadcrumbsVar">
		<value condition="VideoPlayer.Content(livetv)">$INFO[VideoPlayer.Title]</value>
		<value condition="VideoPlayer.Content(episodes) + !String.IsEmpty(Player.Art(tvshow.clearlogo))">$INFO[VideoPlayer.Season,[COLOR button_focus]S,[/COLOR]]$INFO[VideoPlayer.Episode,[COLOR button_focus]E,: [/COLOR]]$INFO[VideoPlayer.Title]</value>
		<value condition="VideoPlayer.Content(episodes) + Window.IsActive(fullscreenvideo)">$INFO[VideoPlayer.TVShowTitle]$INFO[VideoPlayer.Year, ([COLOR button_focus],[/COLOR])]</value>
		<value condition="!VideoPlayer.Content(episodes) + Window.IsActive(fullscreenvideo)">$INFO[VideoPlayer.Title]$INFO[VideoPlayer.Year, ([COLOR button_focus],[/COLOR])]</value>
		<value condition="MusicPartyMode.Enabled">$LOCALIZE[589]</value>
		<value>$LOCALIZE[31000]...</value>
	</variable>
	<variable name="OSDSubLabelVar">
		<value condition="Window.IsActive(visualisation) + Integer.IsGreater(Playlist.Length,1) + Integer.IsGreater(Playlist.Position,0)">$LOCALIZE[554] $INFO[Playlist.Position] / $INFO[Playlist.Length]</value>
		<value condition="VideoPlayer.Content(musicvideos)">$INFO[VideoPlayer.Artist]$INFO[VideoPlayer.Album, - ]</value>
		<value condition="VideoPlayer.Content(episodes) + Integer.IsLessOrEqual(VideoPlayer.Season,9) + Integer.IsLessOrEqual(VideoPlayer.Episode,9)">$INFO[VideoPlayer.Season,[COLOR button_focus]S0,[/COLOR]]$INFO[VideoPlayer.Episode,[COLOR button_focus]E0, : [/COLOR]]$INFO[VideoPlayer.Title]</value> 
		<value condition="VideoPlayer.Content(episodes) + Integer.IsLessOrEqual(VideoPlayer.Season,9)">$INFO[VideoPlayer.Season,[COLOR button_focus]S0,[/COLOR]]$INFO[VideoPlayer.Episode,[COLOR button_focus]E, : [/COLOR]]$INFO[VideoPlayer.Title]</value> 
		<value condition="VideoPlayer.Content(episodes) + Integer.IsLessOrEqual(VideoPlayer.Episode,9)">$INFO[VideoPlayer.Season,[COLOR button_focus]S,[/COLOR]]$INFO[VideoPlayer.Episode,[COLOR button_focus]E0, : [/COLOR]]$INFO[VideoPlayer.Title]</value> 
		<value condition="VideoPlayer.Content(episodes)">$INFO[VideoPlayer.Season,[COLOR button_focus]S,[/COLOR]]$INFO[VideoPlayer.Episode,[COLOR button_focus]E, : [/COLOR]]$INFO[VideoPlayer.Title]</value>
		<value condition="VideoPlayer.Content(LiveTV) | PVR.IsPlayingRecording | PVR.IsPlayingEpgTag">$INFO[VideoPlayer.ChannelNumberLabel,([COLOR button_focus],[/COLOR]) ]$INFO[VideoPlayer.ChannelName] $INFO[VideoPlayer.EpisodeName, - ]</value>
		<value>$INFO[VideoPlayer.Genre]</value>
	</variable>
	<variable name="OSDSubLabelPVRVar">
		<value condition="Integer.IsLessOrEqual(VideoPlayer.Season,9) + Integer.IsLessOrEqual(VideoPlayer.Episode,9)">$INFO[VideoPlayer.Season,[COLOR button_focus]S0,[/COLOR]]$INFO[VideoPlayer.Episode,[COLOR button_focus]E0, : [/COLOR]]$INFO[VideoPlayer.EpisodeName]</value> 
		<value condition="Integer.IsLessOrEqual(VideoPlayer.Season,9)">$INFO[VideoPlayer.Season,[COLOR button_focus]S0,[/COLOR]]$INFO[VideoPlayer.Episode,[COLOR button_focus]E, : [/COLOR]]$INFO[VideoPlayer.EpisodeName]</value> 
		<value condition="Integer.IsLessOrEqual(VideoPlayer.Episode,9)">$INFO[VideoPlayer.Season,[COLOR button_focus]S,[/COLOR]]$INFO[VideoPlayer.Episode,[COLOR button_focus]E0, : [/COLOR]]$INFO[VideoPlayer.EpisodeName]</value> 
		<value>$INFO[VideoPlayer.Season,[COLOR button_focus]S,[/COLOR]]$INFO[VideoPlayer.Episode,[COLOR button_focus]E, : [/COLOR]]$INFO[VideoPlayer.EpisodeName]</value>
	</variable>
	<variable name="PlayerClearLogoVar">
		<value condition="!String.IsEmpty(Player.Art(tvshow.clearlogo))">$INFO[Player.Art(tvshow.clearlogo)]</value>
		<value condition="!String.IsEmpty(Player.Art(clearlogo))">$INFO[Player.Art(clearlogo)]</value>
	</variable>
	<variable name="AddonsFanartVar">
		<value condition="Skin.HasSetting(no_fanart)"></value>
		<value condition="Window.IsActive(musicinformation) | Window.IsActive(movieinformation) | Window.IsActive(addoninformation) | Window.IsActive(pvrguideinfo) | Window.IsActive(pvrrecordinginfo) | Window.IsActive(pictureinfo) | Window.IsVisible(script-script.extendedinfo-DialogVideoInfo.xml) | Window.IsVisible(script-script.extendedinfo-DialogInfo.xml) | Window.IsVisible(script-script.extendedinfo-VideoList.xml)">$INFO[Window(home).Property(infobackground)]</value>
		<value condition="!String.IsEmpty(Container.ListItem.Art(fanart))">$INFO[Container.ListItem.Art(fanart)]</value>
		<value condition="!String.IsEmpty(Skin.String(HomeFanart.path))">$INFO[Skin.String(HomeFanart.path)]$INFO[Container(9000).ListItem.Property(id)]$INFO[Skin.String(HomeFanart.ext)]</value>
	</variable>
	<variable name="HomeFanartVar">
		<value condition="Skin.HasSetting(no_fanart)"></value>
		<value condition="Window.IsActive(musicinformation) | Window.IsActive(movieinformation) | Window.IsActive(addoninformation) | Window.IsActive(pvrguideinfo) | Window.IsActive(pvrrecordinginfo) | Window.IsActive(pictureinfo) | Window.IsVisible(script-script.extendedinfo-DialogVideoInfo.xml) | Window.IsVisible(script-script.extendedinfo-DialogInfo.xml) | Window.IsVisible(script-script.extendedinfo-VideoList.xml)">$INFO[Window(home).Property(infobackground)]</value>
		<value condition="!String.IsEmpty(Container.ListItem.Art(fanart))">$INFO[Container.ListItem.Art(fanart)]</value>
		<value condition="!String.IsEmpty(Container.ListItem.Property(FanartCode))">$INFO[Skin.String(WeatherFanart.path)]$INFO[Container.ListItem.Property(FanartCode)]$INFO[Skin.String(WeatherFanart.ext)]</value>
		<value condition="!String.IsEmpty(Skin.String(HomeFanart.path)) + Control.HasFocus(804)">$INFO[Skin.String(HomeFanart.path)]power$INFO[Skin.String(HomeFanart.ext)]</value>
		<value condition="!String.IsEmpty(Skin.String(HomeFanart.path)) + Control.HasFocus(802)">$INFO[Skin.String(HomeFanart.path)]settings$INFO[Skin.String(HomeFanart.ext)]</value>
		<value condition="!String.IsEmpty(Skin.String(HomeFanart.path)) + Control.HasFocus(803)">$INFO[Skin.String(HomeFanart.path)]favorites$INFO[Skin.String(HomeFanart.ext)]</value>
		<value condition="!String.IsEmpty(Skin.String(HomeFanart.path)) + Control.HasFocus(801)">$INFO[Skin.String(HomeFanart.path)]search$INFO[Skin.String(HomeFanart.ext)]</value>
		<value condition="!String.IsEmpty(Skin.String(HomeFanart.path))">$INFO[Skin.String(HomeFanart.path)]$INFO[Container(9000).ListItem.Property(id)]$INFO[Skin.String(HomeFanart.ext)]</value>
	</variable>
	<variable name="MediaFanartVar">
		<value condition="Skin.HasSetting(no_fanart)"></value>
		<value condition="Window.IsActive(musicinformation) | Window.IsActive(movieinformation) | Window.IsActive(addoninformation) | Window.IsActive(pvrguideinfo) | Window.IsActive(pvrrecordinginfo) | Window.IsActive(pictureinfo) | Window.IsVisible(script-script.extendedinfo-DialogVideoInfo.xml) | Window.IsVisible(script-script.extendedinfo-DialogInfo.xml) | Window.IsVisible(script-script.extendedinfo-VideoList.xml)">$INFO[Window(home).Property(infobackground)]</value>
		<value condition="Container.Content(genres) + Window.IsActive(videos)">$INFO[Skin.String(MovieGenreFanart.path)]$INFO[ListItem.Label]$INFO[Skin.String(MovieGenreFanart.ext)]</value>
		<value condition="Window.IsActive(pictures) + String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.FolderPath]</value>
		<value condition="!String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
		<value condition="!String.IsEmpty(Container.Art(tvshow.fanart))">$INFO[Container.Art(tvshow.fanart)]</value>
		<value condition="!String.IsEmpty(Container.Art(artist.fanart))">$INFO[Container.Art(artist.fanart)]</value>
		<value>$INFO[Container.Art(fanart)]</value>
	</variable>

  <variable name="genre_poster">
    <!-- ACTION -->
    <value condition="[String.Contains(Listitem.Label,Action) | String.Contains(Listitem.Label,Ninja)]">special://skin/extras/genre-images/video/Action.jpg</value>
    <!-- ADVENTURE -->
    <value condition="[String.Contains(Listitem.Label,Abenteuer) | String.Contains(Listitem.Label,Adventure)]">special://skin/extras/genre-images/video/Adventure.jpg</value>
    <!-- FANTASY -->
    <value condition="[String.Contains(Listitem.Label,Fantasy) | String.Contains(Listitem.Label,Fantasie)]">special://skin/extras/genre-images/video/Fantasy.jpg</value>
    <!-- COMEDY -->
		<value condition="[String.Contains(Listitem.Label,Comedy) | String.Contains(Listitem.Label,Sitcom) | String.Contains(Listitem.Label,Komödie)]">special://skin/extras/genre-images/video/Comedy.jpg</value>
    <!-- WESTERN -->
    <value condition="String.Contains(Listitem.Label,Western)">special://skin/extras/genre-images/video/Western.jpg</value>
    <!-- EASTERN -->
    <value condition="[String.Contains(Listitem.Label,Eastern | String.Contains(Listitem.Label,Asia | String.Contains(Listitem.Label,Kung-Fu | String.Contains(Listitem.Label,Karate])">special://skin/extras/genre-images/video/Eastern.jpg</value>
    <!-- FAMILY -->
    <value condition="[String.Contains(Listitem.Label,Family) | String.Contains(Listitem.Label,Familie) | String.Contains(Listitem.Label,Familien) | String.Contains(Listitem.Label,Kinder) | String.Contains(Listitem.Label,Kids)]">special://skin/extras/genre-images/video/Family.jpg</value>
    <!-- CRIME -->
		<value condition="[String.Contains(Listitem.Label,CSI) | String.Contains(Listitem.Label,Crime) | String.Contains(Listitem.Label,Krimi) | String.Contains(Listitem.Label,Agenten)]">special://skin/extras/genre-images/video/Crime.jpg</value>
		<value condition="[String.Contains(Listitem.Label,Anwälte) | String.Contains(Listitem.Label,Law) | String.Contains(Listitem.Label,Lawyer)]">special://skin/extras/genre-images/video/Crime.jpg</value>
    <!-- SCIENCE FICTION -->
    <value condition="[String.Contains(Listitem.Label,Science Fiction) | String.Contains(Listitem.Label,Science-Fiction) | String.Contains(Listitem.Label,Sci-Fi) | String.Contains(Listitem.Label,fiction)  | String.Contains(Listitem.Label,Stargate)]">special://skin/extras/genre-images/video/Science Fiction.jpg</value>
    <!-- SUPERHEROES -->
    <value condition="[String.Contains(Listitem.Label,Superhelden) | String.Contains(Listitem.Label,Superheros) | String.Contains(Listitem.Label,Comic Verfilmungen) | String.Contains(Listitem.Label,Marvel]">special://skin/extras/genre-images/video/Superheroes.jpg</value>
    <!-- ANIMATION -->
		<value condition="[String.Contains(Listitem.Label,Animation) | String.Contains(Listitem.Label,Anime)]">special://skin/extras/genre-images/video/Animation.jpg</value>
    <!-- KIDS -->
    <value condition="[String.Contains(Listitem.Label,Children) | String.Contains(Listitem.Label,Kids) | String.Contains(Listitem.Label,Kinder | String.Contains(Listitem.Label,Zeichentrick)]">special://skin/extras/genre-images/video/Kids.jpg</value>
    <!-- DRAMA -->
    <value condition="String.Contains(Listitem.Label,Drama)">special://skin/extras/genre-images/video/Drama.jpg</value>
    <!-- MYSTERY -->
    <value condition="[String.Contains(Listitem.Label,suspense) | String.Contains(Listitem.Label,Mystic) | String.Contains(Listitem.Label,Mystery) | String.Contains(Listitem.Label,Mysterie)]">special://skin/extras/genre-images/video/Mystery.jpg</value>
    <!-- DOCUMENTARY -->
    <value condition="[String.Contains(Listitem.Label,Dokumenation) | String.Contains(Listitem.Label,Doku) | String.Contains(Listitem.Label,Documentary) | String.Contains(Listitem.Label,National) | String.Contains(Listitem.Label,Nature)]">special://skin/extras/genre-images/video/Documentary.jpg</value>
    <!-- ROMANCE -->
    <value condition="[String.Contains(Listitem.Label,Love) | String.Contains(Listitem.Label,Romance) | String.Contains(Listitem.Label,Romanze) | String.Contains(Listitem.Label,Romantik)]">special://skin/extras/genre-images/video/Romance.jpg</value>
    <!-- WAR -->
    <value condition="[String.Contains(Listitem.Label,Krieg) | String.Contains(Listitem.Label,War)]">special://skin/extras/genre-images/video/War.jpg</value>
    <!-- BIOGRAPHY -->
    <value condition="[String.Contains(Listitem.Label,Biografie) | String.Contains(Listitem.Label,Biography)]">special://skin/extras/genre-images/video/Biography.jpg</value>
    <!-- MUSIC -->  
    <value condition="[String.Contains(Listitem.Label,Musik) | String.Contains(Listitem.Label,Music) | String.Contains(Listitem.Label,Musical) | String.Contains(Listitem.Label,Opera) | String.Contains(Listitem.Label,Oper)]">special://skin/extras/genre-images/video/Music.jpg</value>
    <!-- THRILLER --> 
    <value condition="String.Contains(Listitem.Label,Thriller)">special://skin/extras/genre-images/video/Thriller.jpg</value>
    <!-- SPORT -->
    <value condition="[String.Contains(Listitem.Label,Sport) | String.Contains(Listitem.Label,Sports) | String.Contains(Listitem.Label,Boxer) | String.Contains(Listitem.Label,Boxing) | String.Contains(Listitem.Label,Football) | String.Contains(Listitem.Label,Baseball) | String.Contains(Listitem.Label,Basketball)]">special://skin/extras/genre-images/video/Sport.jpg</value>
    <!-- EROTIC -->
    <value condition="[String.Contains(Listitem.Label,Erotic)| String.Contains(Listitem.Label,Erotik) | String.Contains(Listitem.Label,Porn)| String.Contains(Listitem.Label,Porno)]">special://skin/extras/genre-images/video/Erotic.jpg</value>
    <!-- HORROR -->
    <value condition="[String.Contains(Listitem.Label,Horror) | String.Contains(Listitem.Label,Zombies) | String.Contains(Listitem.Label,Splatter) | String.Contains(Listitem.Label,Grusel)]">special://skin/extras/genre-images/video/Horror.jpg</value>
    <!-- HOLIDAY -->
    <value condition="[String.Contains(Listitem.Label,Christmas) | String.Contains(Listitem.Label,Weihnachten)]">special://skin/extras/genre-images/video/Holiday.jpg</value>
    <!-- HISTORY -->     
    <value condition="[String.Contains(Listitem.Label,Historie) | String.Contains(Listitem.Label,History) | String.Contains(Listitem.Label,Monumental)]">special://skin/extras/genre-images/video/History.jpg</value>
    <!-- NOIR -->
    <value condition="[String.Contains(Listitem.Label,Classic) | String.Contains(Listitem.Label,Klassik) | String.Contains(Listitem.Label,Film-Noir)]">special://skin/extras/genre-images/video/Noir.jpg</value>
    <!-- DOCTOR -->
    <value condition="[String.Contains(Listitem.Label,Ärzte) | String.Contains(Listitem.Label,Krankenhaus) | String.Contains(Listitem.Label,Doctor) | String.Contains(Listitem.Label,Hospital)]">special://skin/extras/genre-images/video/Doctor.jpg</value>
    <!-- GAME -->
    <value condition="[String.Contains(Listitem.Label,Game) | String.Contains(Listitem.Label,Spiel)]">special://skin/extras/genre-images/video/Game.jpg</value>
    <!-- NEWS -->
    <value condition="[String.Contains(Listitem.Label,News) | String.Contains(Listitem.Label,Nachrichten)]">special://skin/extras/genre-images/video/News.jpg</value>
    <!-- TALK -->
    <value condition="[String.Contains(Listitem.Label,Talk) | String.Contains(Listitem.Label,Diskussion)]">special://skin/extras/genre-images/video/Talk.jpg</value>
    <!-- POLITICS -->
    <value condition="[String.Contains(Listitem.Label,Talk) | String.Contains(Listitem.Label,Diskussion)]">special://skin/extras/genre-images/video/Politics.jpg</value>
     <!-- SERIES -->
     <value condition="[String.Contains(Listitem.Label,Series) | String.Contains(Listitem.Label,Serie)]">special://skin/extras/genre-images/video/Series.jpg</value>
    <!-- CATASTROPHE -->
    <value condition="[String.Contains(Listitem.Label,Catastrophe) | String.Contains(Listitem.Label,Katastrophe) | String.Contains(Listitem.Label,Disaster)]">special://skin/extras/genre-images/video/Catastrophe.jpg</value>


    <!-- CLASSIC -->
    <value condition="[String.Contains(Listitem.Label,classic) | String.Contains(Listitem.Label,opera) | String.Contains(Listitem.Label,Orchestral) | String.Contains(Listitem.Label,Choral)]">special://skin/extras/genre-images/audio/Classic.jpg</value>
    <!-- SOUNDTRACK -->
    <value condition="[String.Contains(Listitem.Label,soundtrack) | String.Contains(Listitem.Label,cinema) | String.Contains(Listitem.Label,musical) | String.Contains(Listitem.Label,score)]">special://skin/extras/genre-images/audio/Soundtrack.jpg</value>
    <!-- NEWAGE -->
    <value condition="[String.Contains(Listitem.Label,new age) | String.Contains(Listitem.Label,environment) | String.Contains(Listitem.Label,healing) | String.Contains(Listitem.Label,meditation) | String.Contains(Listitem.Label,nature) | String.Contains(Listitem.Label,relax)]">special://skin/extras/genre-images/audio/Newage.jpg</value>
    <!-- ROCK -->
    <value condition="[String.Contains(Listitem.Label,rock) | String.Contains(Listitem.Label,grunge) | String.Contains(Listitem.Label,punk)]">special://skin/extras/genre-images/audio/Rock.jpg</value>
    <!-- METAL -->
    <value condition="String.Contains(Listitem.Label,metal)">special://skin/extras/genre-images/audio/Metal.jpg</value>
    <!-- COUNTRY -->
    <value condition="[String.Contains(Listitem.Label,country) | String.Contains(Listitem.Label,americana) | String.Contains(Listitem.Label,bluegrass) | String.Contains(Listitem.Label,cowboy) | String.Contains(Listitem.Label,honky) | String.Contains(Listitem.Label,hokum)]">special://skin/extras/genre-images/audio/Country.jpg</value>
    <!-- JAZZ -->
    <value condition="[String.Contains(Listitem.Label,jazz) | String.Contains(Listitem.Label,big band) | String.Contains(Listitem.Label,fusion) | String.Contains(Listitem.Label,ragtime)]">special://skin/extras/genre-images/audio/Jazz.jpg</value>
    <!-- SOUL -->
    <value condition="[String.Contains(Listitem.Label,soul) | String.Contains(Listitem.Label,rnb) | String.Contains(Listitem.Label,disco) | String.Contains(Listitem.Label,funk) | String.Contains(Listitem.Label,swing) | String.Contains(Listitem.Label,blues)]">special://skin/extras/genre-images/audio/Soul.jpg</value>
    <!-- RAP -->
    <value condition="[String.Contains(Listitem.Label,rap) | String.Contains(Listitem.Label,hop) | String.Contains(Listitem.Label,bounce) | String.Contains(Listitem.Label,turntablism)]">special://skin/extras/genre-images/audio/Rap.jpg</value>
    <!-- RAGAE -->
    <value condition="[String.Contains(Listitem.Label,raggae) | String.Contains(Listitem.Label,dancehall)]">special://skin/extras/genre-images/audio/Raggae.jpg</value>
    <!-- POP -->
    <value condition="[String.Contains(Listitem.Label,pop) | String.Contains(Listitem.Label,beat)]">special://skin/extras/genre-images/audio/Pop.jpg</value>
    <!-- DANCE -->
    <value condition="[String.Contains(Listitem.Label,dance) | String.Contains(Listitem.Label,club) | String.Contains(Listitem.Label,house) | String.Contains(Listitem.Label,step) | String.Contains(Listitem.Label,garage) | String.Contains(Listitem.Label,trance) | String.Contains(Listitem.Label,techno)]">special://skin/extras/genre-images/audio/DAnce.jpg</value>
    <!-- ELECTRONIC -->
    <value condition="[String.Contains(Listitem.Label,electro) | String.Contains(Listitem.Label,industrial) | String.Contains(Listitem.Label,experimental) | String.Contains(Listitem.Label,8bit) | String.Contains(Listitem.Label,chiptune) | String.Contains(Listitem.Label,downtempo)]">special://skin/extras/genre-images/audio/electronic.jpg</value>
    <!-- COMEDY -->
    <value condition="[String.Contains(Listitem.Label,comedy) | String.Contains(Listitem.Label,novelty) | String.Contains(Listitem.Label,parody)]">special://skin/extras/genre-images/audio/Comedy.jpg</value>
    <!-- Folk -->
    <value condition="String.Contains(Listitem.Label,folk)">special://skin/extras/genre-images/audio/Folk.jpg</value>
    <!-- EASYLISTENING -->
    <value condition="[String.Contains(Listitem.Label,easy) | String.Contains(Listitem.Label,launge) | String.Contains(Listitem.Label,background) | String.Contains(Listitem.Label,ambient)]">special://skin/extras/genre-images/audio/EasyListening.jpg</value>
    <!-- HOLIDAY -->
    <value condition="[String.Contains(Listitem.Label,holiday) | String.Contains(Listitem.Label,christmas) | String.Contains(Listitem.Label,easter) | String.Contains(Listitem.Label,halloween) | String.Contains(Listitem.Label,thanksgiving) | String.Contains(Listitem.Label,bayram) | String.Contains(Listitem.Label,new year)]">special://skin/extras/genre-images/audio/Holiday.jpg</value>
    <!-- ALTERNATIVE -->
    <value condition="[String.Contains(Listitem.Label,alternative) | String.Contains(Listitem.Label,new wave) | String.Contains(Listitem.Label,progressive)]">special://skin/extras/genre-images/audio/Alternative.jpg</value>
    <!-- COMPILATION -->
    <value condition="[String.Contains(Listitem.Label,compilation) | String.Contains(Listitem.Label,misc)]">special://skin/extras/genre-images/audio/Compilation.jpg</value>
    <!-- AUDIOBOOK -->
    <value condition="[String.Contains(Listitem.Label,audiobook) | String.Contains(Listitem.Label,book)]">special://skin/extras/genre-images/audio/Audiobook.jpg</value>
    <!-- KARAOKE -->
    <value condition="String.Contains(Listitem.Label,karaoke)">special://skin/extras/genre-images/audio/Karaoke.jpg</value>
    <!-- VOCAL -->
    <value condition="String.Contains(Listitem.Label,vocal)">special://skin/extras/genre-images/audio/Vocal.jpg</value>
    <!-- VOCAL -->
    <value condition="String.Contains(Listitem.Label,schlager)">special://skin/extras/genre-images/audio/Schlager.jpg</value>
  </variable>
  
   <variable name="genre_fanart">
    <value condition="String.Contains(Listitem.Label,Comedy) | String.Contains(Listitem.Label,Sitcom) | String.Contains(Listitem.Label,Komödie)">special://skin/extras/genre-images/backgrounds/Comedy.jpg</value>
		<value condition="String.Contains(Listitem.Label,Family) | String.Contains(Listitem.Label,Familie) | String.Contains(Listitem.Label,Familien)">special://skin/extras/genre-images/backgrounds/Family.jpg</value>   
		<value condition="String.Contains(Listitem.Label,CSI) | String.Contains(Listitem.Label,Crime) | String.Contains(Listitem.Label,Krimi) | String.Contains(Listitem.Label,Agenten)">special://skin/extras/genre-images/backgrounds/Crime.jpg</value>
		<value condition="String.Contains(Listitem.Label,Anwälte) | String.Contains(Listitem.Label,Law) | String.Contains(Listitem.Label,Lawyer)">special://skin/extras/genre-images/backgrounds/Crime.jpg</value>
		<value condition="String.Contains(Listitem.Label,Sci-Fi) | String.Contains(Listitem.Label,fiction)  | String.Contains(Listitem.Label,Stargate) | String.Contains(Listitem.Label,Marvel)">special://skin/extras/genre-images/backgrounds/Science Fiction.jpg</value>
		<value condition="String.Contains(Listitem.Label,Superhelden) | String.Contains(Listitem.Label,Superheros) | String.Contains(Listitem.Label,Comic Verfilmungen)">special://skin/extras/genre-images/backgrounds/Superheroes.jpg</value>
    <value condition="String.Contains(Listitem.Label,Animation) | String.Contains(Listitem.Label,Anime) | String.Contains(Listitem.Label,Zeichentrick)">special://skin/extras/genre-images/backgrounds/Animation.jpg</value>
		<value condition="!Window.IsActive(Home) + [String.Contains(Listitem.Label,Musik) | String.Contains(Listitem.Label,Music) | String.Contains(Listitem.Label,Musical)]">special://skin/extras/genre-images/backgrounds/Music.jpg</value>
		<value condition="String.Contains(Listitem.Label,Biografie) | String.Contains(Listitem.Label,Biography)">special://skin/extras/genre-images/backgrounds/Biografy.jpg</value>
		<value condition="String.Contains(Listitem.Label,Mystic) | String.Contains(Listitem.Label,Thrill) | String.Contains(Listitem.Label,Mystery) | String.Contains(Listitem.Label,Thriller)">special://skin/extras/genre-images/backgrounds/Mystery.jpg</value>
		<value condition="String.Contains(Listitem.Label,Action) | String.Contains(Listitem.Label,Martial) | String.Contains(Listitem.Label,Ninja)">special://skin/extras/genre-images/backgrounds/Action.jpg</value>
		<value condition="String.Contains(Listitem.Label,Abenteuer) | String.Contains(Listitem.Label,Adventure)">special://skin/extras/genre-images/backgrounds/Adventure.jpg</value>
    <value condition="String.Contains(Listitem.Label,Western)">special://skin/extras/genre-images/backgrounds/Western.jpg</value>
		<value condition="String.Contains(Listitem.Label,Dokumenation) | String.Contains(Listitem.Label,Doku) | String.Contains(Listitem.Label,Dokumentary) | String.Contains(Listitem.Label,National) | String.Contains(Listitem.Label,Nature)">special://skin/extras/genre-images/backgrounds/Documentation.jpg</value>
		<value condition="String.Contains(Listitem.Label,Drama) | String.Contains(Listitem.Label,Love) | String.Contains(Listitem.Label,Romance)">special://skin/extras/genre-images/backgrounds/Drama.jpg</value>
		<value condition="String.Contains(Listitem.Label,Sport) | String.Contains(Listitem.Label,Sports) | String.Contains(Listitem.Label,Boxer) | String.Contains(Listitem.Label,Boxing) | String.Contains(Listitem.Label,Football) | String.Contains(Listitem.Label,Basketball) | String.Contains(Listitem.Label,Baseball)">special://skin/extras/genre-images/backgrounds/Sport.jpg</value>
		<value condition="String.Contains(Listitem.Label,Krieg) | String.Contains(Listitem.Label,War)">special://skin/extras/genre-images/backgrounds/War.jpg</value>
		<value condition="String.Contains(Listitem.Label,Historie) | String.Contains(Listitem.Label,History) | String.Contains(Listitem.Label,Monumental) | String.Contains(Listitem.Label,Film-Noir)">special://skin/extras/genre-images/backgrounds/History.jpg</value>
		<value condition="String.Contains(Listitem.Label,Horror) | String.Contains(Listitem.Label,Zombies) | String.Contains(Listitem.Label,Splatter)">special://skin/extras/genre-images/backgrounds/Horror.jpg</value>
		<value condition="String.Contains(Listitem.Label,Christmas) | String.Contains(Listitem.Label,Weihnachten)">special://skin/extras/genre-images/backgrounds/Holiday.jpg</value>
    <value condition="String.Contains(Listitem.Label,Fantasy)">special://skin/extras/genre-images/backgrounds/Fantasy.jpg</value>
    <value condition="String.Contains(Listitem.Label,jazz) | String.Contains(Listitem.Label,big band) | String.Contains(Listitem.Label,fusion) | String.Contains(Listitem.Label,ragtime)">special://skin/extras/genre-images/backgrounds/Jazz.jpg</value>
    <value condition="String.Contains(Listitem.Label,new age) | String.Contains(Listitem.Label,environment) | String.Contains(Listitem.Label,healing) | String.Contains(Listitem.Label,meditation) | String.Contains(Listitem.Label,nature) | String.Contains(Listitem.Label,relax)">special://skin/extras/genre-images/backgrounds/Newage.jpg</value>
    <value condition="String.Contains(Listitem.Label,country) | String.Contains(Listitem.Label,americana) | String.Contains(Listitem.Label,bluegrass) | String.Contains(Listitem.Label,cowboy) | String.Contains(Listitem.Label,honky) | String.Contains(Listitem.Label,hokum)">special://skin/extras/genre-images/backgrounds/Country.jpg</value>
    <value condition="String.Contains(Listitem.Label,pop) | String.Contains(Listitem.Label,beat)">special://skin/extras/genre-images/backgrounds/Pop.jpg</value>
    <value condition="String.Contains(Listitem.Label,classic) | String.Contains(Listitem.Label,opera) | String.Contains(Listitem.Label,Orchestral) | String.Contains(Listitem.Label,Choral)">special://skin/extras/genre-images/backgrounds/Classic.jpg</value>
    <value condition="String.Contains(Listitem.Label,alternative) | String.Contains(Listitem.Label,new wave) | String.Contains(Listitem.Label,progressive)">special://skin/extras/genre-images/backgrounds/Alternative.jpg</value>
  </variable>
  
	<variable name="WeatherFanartVar">
		<value condition="!String.IsEmpty(Container.ListItem.Property(FanartCode))">$INFO[Skin.String(WeatherFanart.path)]$INFO[Container.ListItem.Property(FanartCode)]$INFO[Skin.String(WeatherFanart.ext)]</value>
		<value condition="!String.IsEmpty(Window(weather).Property(current.fanartcode)) + !String.IsEmpty(Skin.String(weatherfanart.path))">$INFO[Skin.String(weatherfanart.path)]$INFO[Window(Weather).Property(Current.FanartCode)]$INFO[Skin.String(weatherfanart.ext)]</value>
		<value condition="!String.IsEmpty(Skin.String(HomeFanart.path))">$INFO[Skin.String(HomeFanart.path)]weather$INFO[Skin.String(HomeFanart.ext)]</value>
	</variable>
	<variable name="ListWatchedIconVar">
		<value condition="ListItem.IsRecording">windows/pvr/record.png</value>
		<value condition="ListItem.IsPlaying">overlays/watched/OverlayPlaying-List.png</value>
		<value condition="ListItem.IsResumable">overlays/watched/resume.png</value>
		<value condition="ListItem.IsCollection">overlays/set.png</value>
		<value condition="ListItem.IsFolder + String.IsEmpty(Listitem.dbtype) + !String.IsEqual(ListItem.Overlay,OverlayWatched.png) + !ListItem.IsParentFolder">overlays/folder.png</value>
		<value condition="!String.IsEmpty(ListItem.Overlay)">$INFO[ListItem.Overlay]</value>
		<value condition="!ListItem.IsParentFolder">OverlayUnwatched.png</value>
	</variable>
	<variable name="WallWatchedIconVar">
		<value condition="ListItem.IsRecording">windows/pvr/record.png</value>
		<value condition="ListItem.IsCollection">overlays/set.png</value>
		<value condition="ListItem.IsPlaying">overlays/watched/OverlayPlaying-List.png</value>
    <!--value condition="ListItem.IsResumable">overlays/watched/resume.png</value-->
		<value condition="Integer.IsGreater(ListItem.Playcount,0)">$INFO[ListItem.Overlay]</value>
	</variable>
	<!-- Breadcrumbs -->
	<variable name="BreadcrumbsVideoVar">
		<value condition="Container.Content(movies) | String.StartsWith(container.folderpath,library://video/movies/) | String.StartsWith(container.folderpath,videodb://movies)">$LOCALIZE[20342]</value>
		<value condition="Container.Content(musicvideos) | String.StartsWith(container.folderpath,library://video/musicvideos/) | String.StartsWith(container.folderpath,videodb://musicvideos)">$LOCALIZE[20389]</value>
		<value condition="Container.Content(tvshows) | String.StartsWith(container.folderpath,library://video/tvshows/) | String.StartsWith(container.folderpath,videodb://tvshows)">$LOCALIZE[20343]</value>
		<value condition="Container.Content(seasons)">$LOCALIZE[20343]</value>
		<value condition="Container.Content(episodes)">$LOCALIZE[20343]</value>
		<value>$LOCALIZE[3]</value>
	</variable>
	<variable name="BreadcrumbsPVRChannelsVar">
		<value condition="Window.IsActive(TVChannels)">$LOCALIZE[19020] / $LOCALIZE[19019] / $INFO[Control.GetLabel(29)]</value>
		<value>$LOCALIZE[19021] / $LOCALIZE[19019] / $INFO[Control.GetLabel(29)]</value>
	</variable>
	<variable name="BreadcrumbsPVRGuideVar">
		<value condition="Window.IsActive(TVGuide)">$LOCALIZE[19020] / $INFO[Control.GetLabel(29)] - $INFO[Control.GetLabel(30)]</value>
		<value>$LOCALIZE[19021] / $INFO[Control.GetLabel(29)] - $INFO[Control.GetLabel(30)]</value>
	</variable>
	<variable name="BreadcrumbsPVRRecordingsVar">
		<value condition="Window.IsActive(TVRecordings)">$LOCALIZE[19020] / $LOCALIZE[19017]$INFO[Control.GetLabel(30), / ]</value>
		<value>$LOCALIZE[19021] / $LOCALIZE[19017]$INFO[Control.GetLabel(30), / ]</value>
	</variable>
	<variable name="BreadcrumbsPVRTimersVar">
		<value condition="Window.IsActive(TVTimers)">$LOCALIZE[19020] / $LOCALIZE[19040]</value>
		<value condition="Window.IsActive(RadioTimers)">$LOCALIZE[19021] / $LOCALIZE[19040]</value>
		<value condition="Window.IsActive(TVTimerRules)">$LOCALIZE[19020] / $LOCALIZE[19138]$INFO[Control.GetLabel(29), / ]</value>
		<value>$LOCALIZE[19021] / $LOCALIZE[19138]$INFO[Control.GetLabel(29), / ]</value>
	</variable>
	<variable name="BreadcrumbsPVRSearchVar">
		<value condition="Window.IsActive(TVSearch)">$LOCALIZE[19020] / $LOCALIZE[137]</value>
		<value>$LOCALIZE[19021] / $LOCALIZE[137]</value>
	</variable>
	<variable name="BreadcrumbsGameVar">
		<value>$LOCALIZE[15016]</value>
	</variable>
	<variable name="RepeatButtonColordiffuseVar">
		<value condition="Control.HasFocus(704)">button_focus</value>
		<value>FFFFFFFF</value>
	</variable>
	<variable name="PVRChannelMgrHeader">
		<value condition="!String.IsEmpty(Window.Property(IsRadio))">$LOCALIZE[19199] - $LOCALIZE[19024]</value>
		<value>$LOCALIZE[19199] - $LOCALIZE[19023]</value>
	</variable>
	<variable name="RDSInfoSubTitle">
		<value condition="String.IsEmpty(MusicPlayer.ChannelName)">$INFO[Player.Title]</value>
		<value>$INFO[MusicPlayer.ChannelName]$INFO[Player.Title, - ]</value>
	</variable>
	<variable name="PVRGroupMgrHeader">
		<value condition="!String.IsEmpty(Window.Property(IsRadio))">$LOCALIZE[19048] - $LOCALIZE[19174]</value>
		<value>$LOCALIZE[19048] - $LOCALIZE[19173]</value>
	</variable>
	<variable name="PVRAreaVar">
		<value condition="Control.HasFocus(100)">$LOCALIZE[19019]</value>
		<value condition="Control.HasFocus(101)">$LOCALIZE[19069]</value>
		<value condition="Control.HasFocus(102)">$LOCALIZE[19017]</value>
		<value condition="Control.HasFocus(103)">$LOCALIZE[19040]</value>
		<value condition="Control.HasFocus(104)">$LOCALIZE[19138]</value>
		<value condition="Control.HasFocus(105)">$LOCALIZE[137]</value>
	</variable>
	<variable name="PlayerControlsRepeatImageVar">
		<value condition="Playlist.IsRepeatOne">osd/fullscreen/buttons/repeat-one.png</value>
		<value condition="Playlist.IsRepeat">osd/fullscreen/buttons/repeat-all.png</value>
		<value>osd/fullscreen/buttons/repeat-off.png</value>
	</variable>
	<variable name="PlayerLabel1">
		<value condition="Player.HasVideo">$INFO[VideoPlayer.Title]</value>
		<value condition="Player.HasAudio">$INFO[MusicPlayer.Artist]</value>
	</variable>
	<variable name="PlayerLabel2">
		<value condition="VideoPlayer.Content(episodes)">$LOCALIZE[20373]$INFO[VideoPlayer.Season,: , / ]$LOCALIZE[20359]$INFO[VideoPlayer.Episode,: ]</value>
		<value condition="VideoPlayer.Content(movies)">$INFO[VideoPlayer.Year]</value>
		<value condition="VideoPlayer.Content(livetv)">$INFO[VideoPlayer.ChannelName]</value>
		<value condition="Player.HasAudio">[COLOR grey]$INFO[MusicPlayer.Album][/COLOR]$INFO[MusicPlayer.Year, [,] ]</value>
	</variable>
	<variable name="PlayerLabel3">
		<value condition="VideoPlayer.Content(episodes)">$INFO[VideoPlayer.TvShowTitle]</value>
		<value condition="VideoPlayer.Content(movies) | VideoPlayer.Content(livetv)">$INFO[VideoPlayer.Genre]</value>
		<value condition="Player.HasAudio">$INFO[MusicPlayer.TrackNumber,,: ][COLOR=grey]$INFO[Player.Title][/COLOR]</value>
	</variable>
	<variable name="PVRTimerIcon">
		<value condition="ListItem.IsRecording">icons/pvr/PVR-IsRecording.png</value>
		<value condition="ListItem.HasTimerSchedule + ListItem.TimerHasError">icons/pvr/PVR-HasTimerScheduleError.png</value>
		<value condition="ListItem.HasTimer + ListItem.TimerHasError">icons/pvr/PVR-HasTimerError.png</value>
		<value condition="ListItem.HasTimerSchedule + ListItem.TimerHasConflict">icons/pvr/PVR-HasTimerScheduleConflict.png</value>
		<value condition="ListItem.HasTimer + ListItem.TimerHasConflict">icons/pvr/PVR-HasTimerConflict.png</value>
		<value condition="ListItem.HasRecording">icons/pvr/PVR-HasRecording.png</value>
		<value condition="ListItem.HasTimerSchedule + !ListItem.TimerIsActive">icons/pvr/PVR-HasTimerScheduleDisabled.png</value>
		<value condition="ListItem.HasTimer + !ListItem.TimerIsActive">icons/pvr/PVR-HasTimerDisabled.png</value>
		<value condition="ListItem.HasTimerSchedule">icons/pvr/PVR-HasTimerSchedule.png</value>
		<value condition="ListItem.HasTimer">icons/pvr/PVR-HasTimer.png</value>
	</variable>
	<variable name="SeasonEpisodeLabel">
		<value condition="Integer.IsEqual(ListItem.Season,0) + Integer.IsGreater(ListItem.Episode,9)">$INFO[ListItem.Episode,E, : ,]</value>
		<value condition="Integer.IsEqual(ListItem.Season,0) + !Integer.IsGreater(ListItem.Episode,9)">$INFO[ListItem.Episode,E0, : ,]</value>
		<value condition="Integer.IsLessOrEqual(ListItem.Season,9) + Integer.IsLessOrEqual(ListItem.Episode,9)">$INFO[ListItem.Season,S0,]$INFO[ListItem.Episode,E0, : ,]</value> 
		<value condition="Integer.IsLessOrEqual(ListItem.Season,9)">$INFO[ListItem.Season,S0,]$INFO[ListItem.Episode,E, : ,]</value> 
		<value condition="Integer.IsLessOrEqual(ListItem.Episode,9)">$INFO[ListItem.Season,S,]$INFO[ListItem.Episode,E0, : ,]</value> 
		<value>$INFO[ListItem.Season,S,]$INFO[ListItem.Episode,E, : ,]</value>
	</variable>
	<variable name="ExpirationDateTimeLabel">
		<value condition="!String.IsEmpty(ListItem.ExpirationDate)">[COLOR grey]$LOCALIZE[19299]:[/COLOR] $INFO[ListItem.ExpirationDate] $INFO[ListItem.ExpirationTime][CR]</value>
	</variable>
	<variable name="VideoHWDecoder">
		<value condition="Player.Process(videohwdecoder)">HW</value>
		<value>SW</value>
	</variable>
	<variable name="AddonNewsVar">
		<value condition="!String.IsEmpty(ListItem.AddonNews)">$LOCALIZE[31136]</value>
	</variable>
	<variable name="TimersSubLabel">
		<value condition="[Window.IsActive(tvtimerrules) | Window.IsActive(radiotimerrules)] + !ListItem.HasTimerSchedule">$INFO[ListItem.Timertype]</value>
		<value>$INFO[ListItem.EpisodeName]</value>
	</variable>
	<variable name="BackgroundOverlayTypeVar">
		<value condition="String.IsEqual(Skin.String(background_overlay),0)">$LOCALIZE[231]</value>
		<value>$INFO[Skin.String(background_overlay),$LOCALIZE[467] ]</value>
	</variable>
	<variable name="MasterModeLabel">
		<value condition="!System.IsMaster">$LOCALIZE[20045]</value>
		<value>$LOCALIZE[20046]</value>
	</variable>
	<variable name="ChannelListEPGIconVar">
		<value condition="!String.IsEmpty(Listitem.EpgEventIcon)">$INFO[ListItem.EpgEventIcon]</value>
		<value>$INFO[ListItem.Icon]</value>
	</variable>
</includes>
